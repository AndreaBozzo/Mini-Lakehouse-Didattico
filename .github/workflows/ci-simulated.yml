name: CI Simulated

on:
  push:
    branches: [main, release/v0.3.0]
  pull_request:
    branches: [main, release/v0.3.0]

jobs:
  ci-simulated:
    runs-on: ubuntu-latest

    steps:
      # ────── Setup ambiente ──────
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      # ────── dbt profile & warehouse ──────
      - name: Create dbt profile for DuckDB
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml <<'EOF'
          mini_lakehouse:
            target: dev
            outputs:
              dev:
                type: duckdb
                path: data/warehouse/warehouse.duckdb
          EOF

      - name: Ensure warehouse directory exists
        run: mkdir -p data/warehouse

      # ────── Quality: lint, format, safety ──────
      - name: Pre-commit (format, lint, safety)
        run: poetry run pre-commit run --all-files --show-diff-on-failure

      # ────── Simulated CI: run + export + audit + checks ──────
      - name: Full simulated pipeline (ci-mode Typer CLI)
        env:
          DUCKDB_PATH: data/warehouse/warehouse.duckdb
        run: poetry run python -m cli.pipeline ci-mode

      # ────── Python smoke tests ──────
      - name: Run Python smoke tests
        run: poetry run pytest tests/ --ignore=tests/test_cli.py --maxfail=1 --disable-warnings

      # ────── Reports ──────
      - name: Generate coverage report
        run: make coverage

      - name: Generate Ruff JSON report
        run: make quality-report

      # ────── Upload artifacts (sempre) ──────
      - name: Upload coverage HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-report
          path: reports/htmlcov

      - name: Upload coverage XML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: reports/coverage.xml

      - name: Upload Ruff JSON report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ruff-report
          path: reports/ruff.json

      # ────── Lint finale (defensivo) ──────
      - name: Final Lint & format checks
        run: make check
