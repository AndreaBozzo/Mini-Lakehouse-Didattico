# pyproject.toml

[tool.poetry]
name = "mini-lakehouse"
version = "0.3.0"
description = "Mini data lakehouse locale didattico con DuckDB, dbt-core, Polars e audit JSON"
authors = ["Andrea Bozzo"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
protobuf = "<4.25"
requests = "^2.31.0"

# Core
duckdb = "^1.3.1"
duckdb-engine = "^0.17.0"
polars = "^1.31.0"
pandas = "^2.3.0"
pyarrow = "^20.0.0"

# dbt (compatibili e stabili, no snowplow bug)
dbt-core = "1.7.9"
dbt-duckdb = "1.7.2"

# CLI
rich = "^13.7.1"
typer = "^0.12.3"

# Dev/Notebook
jupyter = "*"
questionary = "^2.1.0"


[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
isort = "^5.13.2"
ruff = "^0.4.3"
pytest = "*"
pytest-cov = "*"
coverage = "*"
safety = "*"
pre-commit = "^4.2.0"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I"]
exclude = ["dbt", ".venv", "build"]

[tool.ruff.lint.per-file-ignores]
"dbt/**" = ["E402", "F401", "F841"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
source = ["."]
omit = [
    "cli/pipeline.py",       # entrypoint CLI interattivo (non testabile in CI)
    "audit/export_marts.py", # script standalone
    "audit/audit_log.py",    # script standalone
    "notebooks/*",           # ignoriamo notebook Jupyter
    "dbt/**",                # esclude i file dbt non Python
    "tests/*",               # ignora i file test nel calcolo coverage
]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "@abstractmethod",
    "raise NotImplementedError",
]
